@model List<ProjectTask>
@using System.Text
<title>Tasks</title>

@{
    if (Model.Count != 0)
    {
        <div class="DleteAll">
        <a asp-action="DelteAll" class="btn btn-danger">Dlete All</a>
        </div>
    }
}
<style>
    .hover-description {
        position: relative;
    }

        .hover-description .description-content {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            background-color: #fff;
            padding: 10px;
            border: 1px solid #ccc;
            z-index: 9999;
        }

        .hover-description:hover .description-content {
            display: block;
        }
</style>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Employees</th>
            <th>Leader</th>
            <th>Description</th>
            <th>Created At</th>
            <th>Due At</th>
            <th>Duration</th>
            <th>Priority</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string color = "success";
            if (item.IsCompleted) { color = "danger"; }
            <tr class="@color">
                @{
                    string TaskLeader = "No Value";
                    string[] EmployeeName = new string[item.Employees.Count];
                    //List<Employee> EmployeesList = new List<Employee>();
                    //EmployeesList = ViewBag.Employees.ToList();
                    List<int> itemEmployees = item.Employees;
                    for(int i =0; i < item.Employees.Count; i++)
                    {
                        
                    }
                }
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>
                    @{
                        foreach(var i in ViewBag.Employees)
                        {
                            foreach(var j in item.Employees)
                            {
                                @{
                                    StringBuilder sb =new StringBuilder;}
                                if (i.Id == j)
                                {
                                    @sb.Append)
                                    <text>@i.Name</text>

                                    <text>, </text>
                                }
                            }
                            if(item.TaskLeader==i.Id){ TaskLeader = i.Name; }
                        }
                    }
                </td>
                <td>@TaskLeader</td>
                <td class="hover-description">
                    @{
                        int counter = 0;
                        foreach(var i in item.Description)
                        {
                            <text>@i</text>
                            counter++;
                            if (counter >= 15)
                            {
                                <text>...</text>
                                break;
                            }
                        }
                    }
                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            const hoverDescription = document.querySelector(".hover-description");
                            const descriptionContent = document.createElement("div");
                            descriptionContent.classList.add("description-content");
                            descriptionContent.innerText = "@item.Description";
                            hoverDescription.appendChild(descriptionContent);
                        });
                    </script>
                </td>
                <td>@item.CreatedAt</td>
                <td>@item.DueDate</td>
                <td>
                    @{
                        item.Duration = (int)(item.DueDate.Value - item.CreatedAt).TotalDays;
                    }
                    <text>@item.Duration Dayes</text>
                </td>
                @switch (item.Priority)
                {
                    case 1:
                        <td style="color:red">Critical</td>
                        break;
                    case 2:
                        <td style="color:aqua">High</td>
                        break;
                    case 3:
                        <td style="color:greenyellow">Medium</td>
                        break;
                    case 4:
                        <td style="color:green">Low</td>
                        break;
                    case 5:
                        <td>Optional</td>
                        break;
                }
                @if (item.IsCompleted)
                {
                    <td style="color:greenyellow">Completed</td>
                }
                else{<td style="color:red">Not Completed</td>}
                <td><a asp-action="Edit" asp-route-id="@item.Id">Edit</a></td>
                <td><a asp-action="Delete" asp-route-id="@item.Id">Delete</a></td>
           
            </tr>
        }
    </tbody>
</table>

